/*  updateCurrentEvent() {
    let id = this.state.currentEvent;  // this should be Firebase key#
    let currentEvent = this.state.Events[id];
    currentEvent.name = this.refs.editTodoInput.value;  //  ???
    axios({
      url: `/${id}.json`,
      baseURL: 'https://seventeenr-38a86.firebaseio.com',
      method: "PATCH",
      data: currentEvent
    }).then((response) => {
      let events = this.state.Events;
      events[id] = currentEvent;
      this.setState({
        Events: events,
        edit: false
      });
    }).catch((error) => {
      console.log(error);
    });
  }*/

/*  renderSelectedTodo() {
    let content;
    if (this.state.currentTodo) {
      let currentTodo = this.state.todos[this.state.currentTodo];
      if(!this.state.edit) {
        content =  (
          <div>
            <div className="d-flex justify-content-end mb-3">
              <button onClick={this.enableEditMode}>Edit</button>
            </div>
            <h1>{currentTodo.title}</h1>
          </div>
        );
      } else {
        content =  (
          <div>
            <div className="d-flex justify-content-end mb-3">
              <button onClick={this.updateCurrentTodo}>Save</button>
            </div>
            <input className="w-100" defaultValue={currentTodo.title} ref="editTodoInput" />
          </div>
        );
      }
    }
    return content;
  }*/


const PeopleList = ({ people }) => (
  <div className="people-list">
    {people.map((person, index) => (
      <p key={index}>
        <Link to={`/people/${index + 1}`}>{person.name}</Link>
      </p>
    ))}
  </div>
);*/

  /*    onChange={(event) => changeCurrentEvent(event)}  */

  /* {Object.keys(Events).map((key) => <div key={key} value={key}>{Events[key].name}</div>)}
      */


